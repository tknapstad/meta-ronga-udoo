diff --git a/include/fixx11.h b/include/fixx11.h
index e69de29..3351c01 100644
--- a/include/fixx11.h
+++ b/include/fixx11.h
@@ -0,0 +1,301 @@
+/****************************************************************************
+
+ Copyright (C) 2003 Lubos Lunak <l.lunak@xxxxxxx>
+
+Permission is hereby granted, free of charge, to any person obtaining a
+copy of this software and associated documentation files (the "Software"),
+to deal in the Software without restriction, including without limitation
+the rights to use, copy, modify, merge, publish, distribute, sublicense,
+and/or sell copies of the Software, and to permit persons to whom the
+Software is furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+DEALINGS IN THE SOFTWARE.
+
+****************************************************************************/
+
+//#ifdef don't do this, this file is supposed to be included
+//#define multiple times
+
+#include <QtCore/QtGlobal>
+
+/* Usage:
+
+ If you get compile errors caused by X11 includes (the line
+ where first error appears contains word like None, Unsorted,
+ Below, etc.), put #include <fixx11h.h> in the .cpp file
+ (not .h file!) between the place where X11 headers are
+ included and the place where the file with compile
+ error is included (or the place where the compile error
+ in the .cpp file occurs).
+
+ This file remaps X11 #defines to const variables or
+ inline functions. The side effect may be that these
+ symbols may now refer to different variables
+ (e.g. if X11 #defined NoButton, after this file
+ is included NoButton would no longer be X11's
+ NoButton, but Qt::NoButton instead). At this time,
+ there's no conflict known that could cause problems.
+
+ The original X11 symbols are still accessible
+ (e.g. for None) as X::None, XNone, and also still
+ None, unless name lookup finds different None
+ first (in the current class, etc.)
+
+ Use 'Unsorted', 'Bool' and 'index' as templates.
+
+*/
+
+namespace X
+{
+
+// template --->
+// Affects: Should be without side effects.
+#ifdef Unsorted
+#ifndef FIXX11H_Unsorted
+#define FIXX11H_Unsorted
+const int XUnsorted = Unsorted;
+#undef Unsorted
+const int Unsorted = XUnsorted;
+#endif
+#undef Unsorted
+#endif
+// template <---
+
+// Affects: Should be without side effects.
+#ifdef None
+#ifndef FIXX11H_None
+#define FIXX11H_None
+const XID XNone = None;
+#undef None
+const XID None = XNone;
+#endif
+#undef None
+#endif
+
+// template --->
+// Affects: Should be without side effects.
+#ifdef Bool
+#ifndef FIXX11H_Bool
+#define FIXX11H_Bool
+#ifdef _XTYPEDEF_BOOL /* Xdefs.h has typedef'ed Bool already */
+ #undef Bool
+#else
+ typedef Bool XBool;
+ #undef Bool
+ typedef XBool Bool;
+#endif
+#endif
+#undef Bool
+#define _XTYPEDEF_BOOL
+#endif
+// template <---
+
+// Affects: Should be without side effects.
+#ifdef KeyPress
+#ifndef FIXX11H_KeyPress
+#define FIXX11H_KeyPress
+const int XKeyPress = KeyPress;
+#undef KeyPress
+const int KeyPress = XKeyPress;
+#endif
+#undef KeyPress
+#endif
+
+// Affects: Should be without side effects.
+#ifdef KeyRelease
+#ifndef FIXX11H_KeyRelease
+#define FIXX11H_KeyRelease
+const int XKeyRelease = KeyRelease;
+#undef KeyRelease
+const int KeyRelease = XKeyRelease;
+#endif
+#undef KeyRelease
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Above
+#ifndef FIXX11H_Above
+#define FIXX11H_Above
+const int XAbove = Above;
+#undef Above
+const int Above = XAbove;
+#endif
+#undef Above
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Below
+#ifndef FIXX11H_Below
+#define FIXX11H_Below
+const int XBelow = Below;
+#undef Below
+const int Below = XBelow;
+#endif
+#undef Below
+#endif
+
+// Affects: Should be without side effects.
+#ifdef FocusIn
+#ifndef FIXX11H_FocusIn
+#define FIXX11H_FocusIn
+const int XFocusIn = FocusIn;
+#undef FocusIn
+const int FocusIn = XFocusIn;
+#endif
+#undef FocusIn
+#endif
+
+// Affects: Should be without side effects.
+#ifdef FocusOut
+#ifndef FIXX11H_FocusOut
+#define FIXX11H_FocusOut
+const int XFocusOut = FocusOut;
+#undef FocusOut
+const int FocusOut = XFocusOut;
+#endif
+#undef FocusOut
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Always
+#ifndef FIXX11H_Always
+#define FIXX11H_Always
+const int XAlways = Always;
+#undef Always
+const int Always = XAlways;
+#endif
+#undef Always
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Expose
+#ifndef FIXX11H_Expose
+#define FIXX11H_Expose
+const int XExpose = Expose;
+#undef Expose
+const int Expose = XExpose;
+#endif
+#undef Expose
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Success
+#ifndef FIXX11H_Success
+#define FIXX11H_Success
+const int XSuccess = Success;
+#undef Success
+const int Success = XSuccess;
+#endif
+#undef Success
+#endif
+
+// Affects: Should be without side effects.
+#ifdef GrayScale
+#ifndef FIXX11H_GrayScale
+#define FIXX11H_GrayScale
+const int XGrayScale = GrayScale;
+#undef GrayScale
+const int GrayScale = XGrayScale;
+#endif
+#undef GrayScale
+#endif
+
+// Affects: Should be without side effects.
+#ifdef Status
+#ifndef FIXX11H_Status
+#define FIXX11H_Status
+typedef Status XStatus;
+#undef Status
+typedef XStatus Status;
+#endif
+#undef Status
+#endif
+
+// template --->
+// Affects: Should be without side effects.
+#ifdef CursorShape
+#ifndef FIXX11H_CursorShape
+#define FIXX11H_CursorShape
+const int XCursorShape = CursorShape;
+#undef CursorShape
+const int CursorShape = XCursorShape;
+#endif
+#undef CursorShape
+#endif
+// template <---
+
+// template --->
+// Affects: Should be without side effects.
+#ifdef FontChange
+#ifndef FIXX11H_FontChange
+#define FIXX11H_FontChange
+const int XFontChange = FontChange;
+#undef FontChange
+const int FontChange = XFontChange;
+#endif
+#undef FontChange
+#endif
+// template <---
+
+// Affects: Should be without side effects.
+#ifdef NormalState
+#ifndef FIXX11H_NormalState
+#define FIXX11H_NormalState
+const int XNormalState = NormalState;
+#undef NormalState
+const int NormalState = XNormalState;
+#endif
+#undef NormalState
+#endif
+
+// template --->
+// Affects: Should be without side effects.
+#ifdef index
+#ifndef FIXX11H_index
+#define FIXX11H_index
+inline
+const char* Xindex( const char* s, int c )
+ {
+ return index( s, c );
+ }
+#undef index
+inline
+const char* index( const char* s, int c )
+ {
+ return Xindex( s, c );
+ }
+#endif
+#undef index
+#endif
+// template <---
+
+#ifdef rindex
+// Affects: Should be without side effects.
+#ifndef FIXX11H_rindex
+#define FIXX11H_rindex
+inline
+const char* Xrindex( const char* s, int c )
+ {
+ return rindex( s, c );
+ }
+#undef rindex
+inline
+const char* rindex( const char* s, int c )
+ {
+ return Xrindex( s, c );
+ }
+#endif
+#undef rindex
+#endif
+}
+
+using namespace X;
diff --git a/mkspecs/devices/linux-imx6-g++/qeglfshooks_imx6.cpp b/mkspecs/devices/linux-imx6-g++/qeglfshooks_imx6.cpp
index 719d851..0d1f9c7 100644
--- a/mkspecs/devices/linux-imx6-g++/qeglfshooks_imx6.cpp
+++ b/mkspecs/devices/linux-imx6-g++/qeglfshooks_imx6.cpp
@@ -30,7 +30,7 @@
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
-
+#include <QtCore/qtextstream.h>
 #include "qeglfshooks.h"
 #include <EGL/eglvivante.h>
 #include <QDebug>
diff --git a/mkspecs/devices/linux-imx6-g++/qmake.conf b/mkspecs/devices/linux-imx6-g++/qmake.conf
index 4f464ff..38d36a3 100644
--- a/mkspecs/devices/linux-imx6-g++/qmake.conf
+++ b/mkspecs/devices/linux-imx6-g++/qmake.conf
@@ -19,15 +19,30 @@ include(../common/linux_device_pre.conf)
 EGLFS_PLATFORM_HOOKS_SOURCES = $$PWD/qeglfshooks_imx6.cpp
 
 QMAKE_INCDIR           += $$[QT_SYSROOT]/usr/include
-QMAKE_LIBDIR           += $$[QT_SYSROOT]/usr/lib
+QMAKE_INCDIR                = $$[QT_SYSROOT]/usr/include
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/include/arm-linux-gnueabi/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/include/glib-2.0/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/lib/arm-linux-gnueabi/glib-2.0/include/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/include/gstreamer-0.10/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/include/libxml2/
+QMAKE_INCDIR		    +=$$[QT_SYSROOT]/usr/include/dbus-1.0/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/lib/arm-linux-gnueabi/dbus-1.0/include/
+QMAKE_INCDIR                +=$$[QT_SYSROOT]/usr/include/pulse/
+QMAKE_LIBDIR                = $$[QT_SYSROOT]/usr/lib/
+QMAKE_LIBDIR                +=$$[QT_SYSROOT]/usr/lib/arm-linux-gnueabi/
+QMAKE_LIBDIR                +=$$[QT_SYSROOT]/lib/arm-linux-gnueabi/
+QMAKE_LIBDIR                +=$$[QT_SYSROOT]/usr/lib/gstreamer-0.10/
+#QMAKE_LIBDIR           += $$[QT_SYSROOT]/usr/lib
 
 QMAKE_LIBS_EGL         += -lEGL
 QMAKE_LIBS_OPENGL_ES2  += -lGLESv2 -lEGL -lGAL
-QMAKE_LIBS_OPENVG      += -lOpenVG -lEGL -lGAL
+QMAKE_LIBS_OPENVG      += -lOpenVG -lEGL -lGAL 
 
-QMAKE_LFLAGS           += -Wl,-rpath-link,$$[QT_SYSROOT]/usr/lib
+QMAKE_LFLAGS           += -Wl,-rpath-link,$$[QT_SYSROOT]/usr/lib/
 
-IMX6_CFLAGS             = -march=armv7-a -mfpu=neon -DLINUX=1 -DEGL_API_FB=1
+QMAKE_LFLAGS           += -lpulse-mainloop-glib -lFLAC -lvorbisenc -lvorbis -logg -lXdmcp -ljson -lsndfile -lwrap -lXau -lxcb -lffi -lgthread-2.0 -lgobject-2.0 -lglib-2.0 -lX11 -lxml2 -lz -lpcre -lgstinterfaces-0.10 -lgmodule-2.0 -lgstreamer-0.10 -lgio-2.0 -lselinux -lts -lpulse -ldbus-1 -lpulsecommon-1.0 -lasyncns -lpng -lgstpbutils-0.10 -lgstaudio-0.10 -lgstvideo-0.10 -lgstbase-0.10 -lgstapp-0.10 -lXext -ljpeg 
+
+IMX6_CFLAGS             = -march=armv7-a -mfpu=neon -DLINUX=1 -DEGL_API_FB
 QMAKE_CFLAGS           += $$IMX6_CFLAGS
 QMAKE_CXXFLAGS         += $$IMX6_CFLAGS
 
diff --git a/src/platformsupport/eglconvenience/qeglplatformcontext.cpp b/src/platformsupport/eglconvenience/qeglplatformcontext.cpp
index 7cc3300..b59c7b4 100644
--- a/src/platformsupport/eglconvenience/qeglplatformcontext.cpp
+++ b/src/platformsupport/eglconvenience/qeglplatformcontext.cpp
@@ -31,6 +31,7 @@
 **
 ****************************************************************************/
 
+#include <QtCore/qtextstream.h>
 #include "qeglplatformcontext_p.h"
 #include "qeglconvenience_p.h"
 #include "qeglpbuffer_p.h"
diff --git a/src/platformsupport/eglconvenience/qeglplatformcursor.cpp b/src/platformsupport/eglconvenience/qeglplatformcursor.cpp
index cf41bd2..1177f6c 100644
--- a/src/platformsupport/eglconvenience/qeglplatformcursor.cpp
+++ b/src/platformsupport/eglconvenience/qeglplatformcursor.cpp
@@ -230,7 +230,7 @@ bool QEGLPlatformCursor::setCurrentCursor(QCursor *cursor)
 {
     if (!m_visible)
         return false;
-
+#undef CursorShape
     const Qt::CursorShape newShape = cursor ? cursor->shape() : Qt::ArrowCursor;
     if (m_cursor.shape == newShape && newShape != Qt::BitmapCursor)
         return false;
diff --git a/src/platformsupport/eglconvenience/qeglplatformintegration.cpp b/src/platformsupport/eglconvenience/qeglplatformintegration.cpp
index 7d05b54..20dda31 100644
--- a/src/platformsupport/eglconvenience/qeglplatformintegration.cpp
+++ b/src/platformsupport/eglconvenience/qeglplatformintegration.cpp
@@ -57,6 +57,7 @@
 #include "qeglplatformwindow_p.h"
 #include "qeglplatformbackingstore_p.h"
 #include "qeglplatformscreen_p.h"
+#include <fixx11.h>
 #include "qeglplatformcursor_p.h"
 
 QT_BEGIN_NAMESPACE
diff --git a/src/plugins/platforms/minimalegl/qminimaleglwindow.cpp b/src/plugins/platforms/minimalegl/qminimaleglwindow.cpp
index 906a130..543654c 100644
--- a/src/plugins/platforms/minimalegl/qminimaleglwindow.cpp
+++ b/src/plugins/platforms/minimalegl/qminimaleglwindow.cpp
@@ -31,6 +31,7 @@
 
 #include "qminimaleglwindow.h"
 
+#include <fixx11.h>
 #include <qpa/qwindowsysteminterface.h>
 
 QT_BEGIN_NAMESPACE
